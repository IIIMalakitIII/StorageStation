
@model MyUniversityProject.Models.AuthenticationModel.ChangePassword

<div class="wrapper">
    <div class="wrapped-div">
        <div class="tab-header">
            <div class="col-md-10 offset-md-1">
                <br>
                <form method="post"
                      asp-controller="MyOffice" asp-action="ChangePassword" class="mb-4"
                      data-ajax="true" data-ajax-method="post" data-ajax-failure="failed">

                    @*@using (Html.BeginForm("ChangePassword", "MyOffice", new { htmlAttributes = new { @class = "mb-4" } }))
                        {*@
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.OldPassword, "Old Password", htmlAttributes: new { @class = "control-label  text-white" })
                            @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Old Password" } })
                            @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewPassword, "New Password", htmlAttributes: new { @class = "control-label  text-white" })
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "New Password" } })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label  text-white" })
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <div></div>
                        <div class="form-group">
                            <input type="submit" value="Edit" class="btn btn-success btn-lg btn-block" />
                        </div>
                    </div>
                    @*  }*@
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/bootstrap/js/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        failed = function (xhr) {
            alert('Status: {xhr.status}, Status Text: {xhr.statusText}');
        };
    </script>
}