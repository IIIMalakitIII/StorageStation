@model MyUniversityProject.Models.Standard
@using MyUniversityProject.Models.StorageViewModel
<div class="row">
    <div class="col-md-5 d-flex justify-content-center">
        <div class="wrapper">
            <div class="wrapped-div-1">
                <div class="col-md-10 offset-md-1">
                    @using (Html.BeginForm("GetStandart", "Storage", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.StandardId)
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MinVolume, "Min Volume", htmlAttributes: new { @class = "control-label  text-white" })
                                    @Html.EditorFor(model => model.MinVolume, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 1, @placeholder = "MinVolume" } })
                                    @Html.ValidationMessageFor(model => model.MinVolume, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MaxVolume, "Max Volume", htmlAttributes: new { @class = "control-label  text-white" })
                                    @Html.EditorFor(model => model.MaxVolume, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 1, @placeholder = "MaxVolume" } })
                                    @Html.ValidationMessageFor(model => model.MaxVolume, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, "Price", htmlAttributes: new { @class = "control-label  text-white" })
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "Price", @pattern = @"^(\d+\.)?\d+$" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StandardId, "Standard Id", htmlAttributes: new { @class = "control-label  text-white" })
                                    @Html.EditorFor(model => model.StandardId, new { htmlAttributes = new { @class = "form-control", @placeholder = "StandardId", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.StandardId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Edit" class="btn btn-success btn-lg btn-block" />
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>