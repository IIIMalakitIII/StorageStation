@model MyUniversityProject.Models.StorageViewModel.CreateCellViewModel

<h4 class="text-center"> Create New Cell</h4>
<hr />
<div class="wrapper">
    <div class="wrapped-div">
        <div class="tab-header">
            <div class="col-md-10 offset-md-1">
                <br>
                @using (Html.BeginForm("UpdateCell", "Storage", new { htmlAttributes = new { @class = "mb-4" } }))
                {
                    @Html.HiddenFor(x=>x.CellId)
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Width, "Width", htmlAttributes: new { @class = "control-label  text-white" })
                                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @placeholder = "Width" } })
                                @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Height, "Height", htmlAttributes: new { @class = "control-label  text-white" })
                                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @placeholder = "Height" } })
                                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Length, "Length", htmlAttributes: new { @class = "control-label  text-white" })
                                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @placeholder = "Length" } })
                                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StorageId, "Storage", htmlAttributes: new { @class = "control-label text-white" })
                                @Html.DropDownListFor(model => model.StorageId, Model.Storages as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                @for (int i = 0; i < Model.Storages.Count; i++)
                                {
                                    @Html.HiddenFor(model => Model.Storages[i].Text)
                                    @Html.HiddenFor(model => Model.Storages[i].Value)
                                }
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StandardId, "Standart", htmlAttributes: new { @class = "control-label text-white" })
                                @Html.DropDownListFor(model => model.StandardId, Model.Standarts as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                @for (int i = 0; i < Model.Standarts.Count; i++)
                                {
                                    @Html.HiddenFor(model => Model.Standarts[i].Text)
                                    @Html.HiddenFor(model => Model.Standarts[i].Value)
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label  text-white" })
                                <div>
                                    @Html.CheckBoxFor(model => model.Status,
                                        new
                                             {
                                            @class = "form-control",
                                            @type = "checkbox",
                                            @checked = @Model.Status,
                                            @data_toggle = "toggle",
                                            @data_on = "Active",
                                            @data_off = "Deactive",
                                            @data_onstyle = "success",
                                            @data_offstyle = "danger",
                                            @data_width = "100"
                                        })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Capacity, "Capacity", htmlAttributes: new { @class = "control-label  text-white" })
                                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @placeholder = "Capacity" } })
                                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Update" class="btn btn-success btn-lg btn-block" />
                    </div>

                }
            </div>
        </div>
    </div>
</div>




