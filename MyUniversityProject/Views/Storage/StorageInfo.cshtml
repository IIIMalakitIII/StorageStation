@model MyUniversityProject.Models.Storage
@using MyUniversityProject.Models.FilterModel
@{
    ViewData["Title"] = "StorageInfo";
}
<br />
<div class="row">
    <div class="col-md-5 d-flex justify-content-center">
        <div class="wrapper">
            <div class="wrapped-div-1">
                <div class="col-md-10 offset-md-1">
                    @using (Html.BeginForm("StorageInfo", "Storage", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, "Location", htmlAttributes: new { @class = "control-label  text-white" })
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = "Location" } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StorageId, "Storage Id", htmlAttributes: new { @class = "control-label  text-white" })
                                    @Html.EditorFor(model => model.StorageId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Storage Id", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.StorageId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label  text-white" })
                                    <div>
                                        @Html.CheckBoxFor(model => model.Status,
                                            new
                                                    {
                                                    @class = "form-control",
                                                    @type = "checkbox",
                                                    @checked = @Model.Status,
                                                    @data_toggle = "toggle",
                                                    @data_on = "Active",
                                                    @data_off = "Deactive",
                                                    @data_onstyle = "success",
                                                    @data_offstyle = "danger"
                                                })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Edit" class="btn btn-success btn-lg btn-block" />
                        </div>

                    }
                </div>
            </div>
            @Html.ActionLink("Look at the list of cells", "StorageCells", "Storage", new { StorageId = Model.StorageId }, new { @class = "btn btn-primary btn-block", @style = "background:#8b00ff;" })
        </div>
        
    </div>
</div>


