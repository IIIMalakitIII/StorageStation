@model MyUniversityProject.Models.Storage
@using MyUniversityProject.Models.FilterModel
@{
    ViewData["Title"] = "StorageInfo";
}

<br />

<div class="col-md-5 bg-dark">
    <div class="wrapper">
        <div class="wrapped-div-2">
            @using (Html.BeginForm("StorageInfo", "Storage", FormMethod.Post, htmlAttributes: new { @class = "mb-4" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.StorageId)
                <ul class="list-group" style="list-style-type: none">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <li>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Location, "Location", htmlAttributes: new { @class = "control-label  text-white" })
                                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = "Location" } })
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label  text-white" })
                                    <div>
                                        @Html.CheckBoxFor(model => model.Status,
                                            new {
                                                    @class = "form-control",
                                                    @type = "checkbox",
                                                    @checked = @Model.Status,
                                                    @data_toggle = "toggle",
                                                    @data_on = "Active",
                                                    @data_off = "Deactive",
                                                    @data_onstyle = "success",
                                                    @data_offstyle = "danger"
                                                })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="form-group">
                            <input type="submit" value="Edit" class="btn btn-success btn-lg btn-block" />
                        </div>
                    </li>
                </ul>
            }
            @Html.ActionLink("Look at the list of cells", "StorageCells", "Storage", new { StorageId = Model.StorageId}, new { @class = "btn btn-primary btn-block", @style = "background:#8b00ff;" })
        </div>
    </div>
</div>


