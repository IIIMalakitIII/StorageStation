@model IEnumerable<MyUniversityProject.Models.Storage>
@using System.Text
<br />
@using (Html.BeginForm("GetAllStorage", "Admin", FormMethod.Get))
{
    <div class="input-group mb-3 row d-flex justify-content-center">
        @Html.TextBox("searching", ViewBag.CurrentFilter as string)
        <div class="input-group-append">
            <input class="btn btn-primary" type="submit" value="Find">
        </div>
    </div>
}
<div id="accordionExample">
    <div class="collapse" id="collapseOne" aria-labelledby="headingOne" data-parent="#accordionExample">
        @await Html.PartialAsync("_CreateStorage", new Storage())
    </div>
</div>
<br />

<div class="table-responsive-sm bg-dark">
    <table class="table table-dark text-center">
        <thead>
            <button class="btn btn-primary btn-sm btn-block" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                Create Storage
            </button>
            <tr>
                <th>
                    @Html.ActionLink("Location", "GetAllStorage", new { sortOrder = ViewBag.Location, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    Information
                </th>
                <th>
                    @Html.ActionLink("Status", "GetAllStorage", new { sortOrder = ViewBag.Status, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    Delete
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Location
                    </td>
                    <td>
                        @Html.ActionLink("Information", "StorageInformation", "Storage", new { id = item.StorageId }, new { @class = "btn btn-info" })
                    </td>
                    <td>
                        @if (item.Status)
                        {
                            @Html.Label("", "Work", new { @class = "btn btn-success disabled" })
                        }
                        else
                        {
                            @Html.Label("", "Stop Work", new { @class = "btn btn-danger disabled" })
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "DeleteStorage", "Storage", new { id = item.StorageId }, new { @class = "btn btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts{ 
    <script type="text/javascript">
    @if (!ViewContext.ViewData.ModelState.IsValid)
    {
        var sb = new StringBuilder();
        foreach (var modelState in ViewContext.ViewData.ModelState.Values)
        {
            foreach (var error in modelState.Errors)
            {
                sb.Append(error.ErrorMessage);
            }
        }
        @:alert('@sb.ToString()');
    }
    </script>
}