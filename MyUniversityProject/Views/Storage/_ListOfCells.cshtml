@using MyUniversityProject.Models.Pagination
@model IndexCellViewModel
@addTagHelper "*, MyUniversityProject"

@if (Model.Cells.FirstOrDefault().Any())
{
    <div class="d-flex justify-content-center table-responsive-xl">
        <ul class="list-group">
            <li class="list-group-item">
                <table class="table-sm table-dark text-center">
                    @foreach (var items in Model.Cells)
                    {
                        <tr>
                            @foreach (var item in items)
                            {
                                <td class="form-group">
                                    <ul class="list-group">
                                        <li class="list-group-item">
                                            <ul class="list-group">
                                                <li>
                                                    @if (item.Status)
                                                    {
                                                        <button class="btn btn-success btn-block">
                                                            Active
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn btn-danger btn-block">
                                                            Deactivated
                                                        </button>
                                                    }
                                                </li>
                                                <li class="list-group-item" style="width:200px;">
                                                    @Html.LabelFor(modelItem => item.CellId, "Id: " + item.CellId.ToString(), new { @class = "control-label  text-dark text-center" })
                                                </li>
                                                <li class="list-group-item" style="width:200px;">
                                                    @Html.LabelFor(modelItem => item.Width, "Width: " + item.Width.ToString(), new { @class = "control-label  text-dark text-center" })
                                                </li>
                                                <li class="list-group-item" style="width:200px;">
                                                    @Html.LabelFor(modelItem => item.Height, "Height: " + item.Height.ToString(), new { @class = "control-label  text-dark text-center" })
                                                </li>
                                                <li class="list-group-item" style="width:200px;">
                                                    @Html.LabelFor(modelItem => item.Length, "Length: " + item.Length.ToString(), new { @class = "control-label  text-dark text-center" })
                                                </li>
                                                <li class="list-group-item" style="width:200px;">
                                                    @Html.LabelFor(modelItem => item.Capacity, "Capacity: " + item.Capacity.ToString(), new { @class = "control-label  text-dark text-center" })
                                                </li>
                                            </ul>
                                        </li>
                                        <li class="list-group-item">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    @Html.ActionLink("Information", "GetCellInfo", "Storage", new { id = item.CellId }, new { @class = "btn btn-info" })
                                                </div>
                                                <div class="col-md-6">
                                                    @Html.ActionLink("Delete", "_DeleteCell", "Storage", new { storageId = item.StorageId,id = item.CellId, page = @Model.PageViewModel.PageNumber }, new { @class = "btn btn-danger" })
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                </td>
                            }
                        </tr>
                    }
                </table>
            </li>
            <li class="list-group-item-secondary text-center" style="list-style-type:none">
                <page-link 
                    page-model=@Model.PageViewModel
                    page-url-StorageId=@Model.Cells.FirstOrDefault().FirstOrDefault().StorageId
                    page-url-MinWidth=@Model.CellFilterViewModel.MinWidth
                    page-url-MaxWidth=@Model.CellFilterViewModel.MaxWidth
                    page-url-MinHeight=@Model.CellFilterViewModel.MinHeight
                    page-url-MaxHeight=@Model.CellFilterViewModel.MaxHeight
                    page-url-MinLength=@Model.CellFilterViewModel.MinLength
                    page-url-MaxLength=@Model.CellFilterViewModel.MaxLength
                    page-url-MinCapacity=@Model.CellFilterViewModel.MinCapacity
                    page-url-MaxCapacity=@Model.CellFilterViewModel.MaxCapacity
                    page-url-SearchFilter=@Model.CellFilterViewModel.SearchFilter
                    page-url-SortItem=@Model.CellFilterViewModel.SortItem
                    page-url-SearchValue=@Model.CellFilterViewModel.SearchValue
                    page-action="StorageCells"></page-link>
            </li>
        </ul>

    </div>
}
else
{
    <br/>
    <h1>Sorry, we haven't any cells</h1>
}
